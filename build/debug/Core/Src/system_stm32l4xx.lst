ARM GAS  /tmp/ccWvNeUo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32l4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/system_stm32l4xx.c"
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	1
  22              		.global	SystemInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB132:
   1:Core/Src/system_stm32l4xx.c **** /**
   2:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l4xx.c ****   *
   7:Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l4xx.c ****   *   user application:
   9:Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Core/Src/system_stm32l4xx.c ****   *
  13:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l4xx.c ****   *
  17:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l4xx.c ****   *
  21:Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l4xx.c ****   *
  25:Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /tmp/ccWvNeUo.s 			page 2


  31:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Core/Src/system_stm32l4xx.c ****   * @attention
  68:Core/Src/system_stm32l4xx.c ****   *
  69:Core/Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:Core/Src/system_stm32l4xx.c ****   * All rights reserved.
  71:Core/Src/system_stm32l4xx.c ****   *
  72:Core/Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:Core/Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:Core/Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:Core/Src/system_stm32l4xx.c ****   *
  76:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  77:Core/Src/system_stm32l4xx.c ****   */
  78:Core/Src/system_stm32l4xx.c **** 
  79:Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:Core/Src/system_stm32l4xx.c ****   * @{
  81:Core/Src/system_stm32l4xx.c ****   */
  82:Core/Src/system_stm32l4xx.c **** 
  83:Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:Core/Src/system_stm32l4xx.c ****   * @{
  85:Core/Src/system_stm32l4xx.c ****   */
  86:Core/Src/system_stm32l4xx.c **** 
  87:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
ARM GAS  /tmp/ccWvNeUo.s 			page 3


  88:Core/Src/system_stm32l4xx.c ****   * @{
  89:Core/Src/system_stm32l4xx.c ****   */
  90:Core/Src/system_stm32l4xx.c **** 
  91:Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:Core/Src/system_stm32l4xx.c **** 
  93:Core/Src/system_stm32l4xx.c **** /**
  94:Core/Src/system_stm32l4xx.c ****   * @}
  95:Core/Src/system_stm32l4xx.c ****   */
  96:Core/Src/system_stm32l4xx.c **** 
  97:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:Core/Src/system_stm32l4xx.c ****   * @{
  99:Core/Src/system_stm32l4xx.c ****   */
 100:Core/Src/system_stm32l4xx.c **** 
 101:Core/Src/system_stm32l4xx.c **** /**
 102:Core/Src/system_stm32l4xx.c ****   * @}
 103:Core/Src/system_stm32l4xx.c ****   */
 104:Core/Src/system_stm32l4xx.c **** 
 105:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:Core/Src/system_stm32l4xx.c ****   * @{
 107:Core/Src/system_stm32l4xx.c ****   */
 108:Core/Src/system_stm32l4xx.c **** 
 109:Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:Core/Src/system_stm32l4xx.c **** 
 113:Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:Core/Src/system_stm32l4xx.c **** 
 117:Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:Core/Src/system_stm32l4xx.c **** 
 121:Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:Core/Src/system_stm32l4xx.c ****          configuration. */
 123:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:Core/Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 127:Core/Src/system_stm32l4xx.c **** 
 128:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:Core/Src/system_stm32l4xx.c **** 
 133:Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32l4xx.c **** #else
 139:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
 144:Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
ARM GAS  /tmp/ccWvNeUo.s 			page 4


 145:Core/Src/system_stm32l4xx.c **** 
 146:Core/Src/system_stm32l4xx.c **** /******************************************************************************/
 147:Core/Src/system_stm32l4xx.c **** /**
 148:Core/Src/system_stm32l4xx.c ****   * @}
 149:Core/Src/system_stm32l4xx.c ****   */
 150:Core/Src/system_stm32l4xx.c **** 
 151:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:Core/Src/system_stm32l4xx.c ****   * @{
 153:Core/Src/system_stm32l4xx.c ****   */
 154:Core/Src/system_stm32l4xx.c **** 
 155:Core/Src/system_stm32l4xx.c **** /**
 156:Core/Src/system_stm32l4xx.c ****   * @}
 157:Core/Src/system_stm32l4xx.c ****   */
 158:Core/Src/system_stm32l4xx.c **** 
 159:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:Core/Src/system_stm32l4xx.c ****   * @{
 161:Core/Src/system_stm32l4xx.c ****   */
 162:Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:Core/Src/system_stm32l4xx.c ****   */
 170:Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:Core/Src/system_stm32l4xx.c **** 
 172:Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:Core/Src/system_stm32l4xx.c **** /**
 177:Core/Src/system_stm32l4xx.c ****   * @}
 178:Core/Src/system_stm32l4xx.c ****   */
 179:Core/Src/system_stm32l4xx.c **** 
 180:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:Core/Src/system_stm32l4xx.c ****   * @{
 182:Core/Src/system_stm32l4xx.c ****   */
 183:Core/Src/system_stm32l4xx.c **** 
 184:Core/Src/system_stm32l4xx.c **** /**
 185:Core/Src/system_stm32l4xx.c ****   * @}
 186:Core/Src/system_stm32l4xx.c ****   */
 187:Core/Src/system_stm32l4xx.c **** 
 188:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:Core/Src/system_stm32l4xx.c ****   * @{
 190:Core/Src/system_stm32l4xx.c ****   */
 191:Core/Src/system_stm32l4xx.c **** 
 192:Core/Src/system_stm32l4xx.c **** /**
 193:Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:Core/Src/system_stm32l4xx.c ****   * @retval None
 195:Core/Src/system_stm32l4xx.c ****   */
 196:Core/Src/system_stm32l4xx.c **** 
 197:Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 198:Core/Src/system_stm32l4xx.c **** {
  29              		.loc 1 198 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWvNeUo.s 			page 5


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 199:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 202:Core/Src/system_stm32l4xx.c **** #endif
 203:Core/Src/system_stm32l4xx.c **** 
 204:Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 206 3 view .LVU1
  35              		.loc 1 206 6 is_stmt 0 view .LVU2
  36 0000 034A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38              		.loc 1 206 14 view .LVU3
  39 0006 43F47003 		orr	r3, r3, #15728640
  40 000a C2F88830 		str	r3, [r2, #136]
 207:Core/Src/system_stm32l4xx.c **** #endif
 208:Core/Src/system_stm32l4xx.c **** }
  41              		.loc 1 208 1 view .LVU4
  42 000e 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0010 00ED00E0 		.word	-536810240
  47              		.cfi_endproc
  48              	.LFE132:
  50              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  51              		.align	1
  52              		.global	SystemCoreClockUpdate
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	SystemCoreClockUpdate:
  58              	.LFB133:
 209:Core/Src/system_stm32l4xx.c **** 
 210:Core/Src/system_stm32l4xx.c **** /**
 211:Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:Core/Src/system_stm32l4xx.c ****   *         other parameters.
 215:Core/Src/system_stm32l4xx.c ****   *
 216:Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:Core/Src/system_stm32l4xx.c ****   *
 220:Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:Core/Src/system_stm32l4xx.c ****   *
 224:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:Core/Src/system_stm32l4xx.c ****   *
 226:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:Core/Src/system_stm32l4xx.c ****   *
 228:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:Core/Src/system_stm32l4xx.c ****   *
 230:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
ARM GAS  /tmp/ccWvNeUo.s 			page 6


 231:Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:Core/Src/system_stm32l4xx.c ****   *
 233:Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 234:Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:Core/Src/system_stm32l4xx.c ****   *
 237:Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:Core/Src/system_stm32l4xx.c ****   *
 241:Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 244:Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 245:Core/Src/system_stm32l4xx.c ****   *
 246:Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:Core/Src/system_stm32l4xx.c ****   *
 249:Core/Src/system_stm32l4xx.c ****   * @retval None
 250:Core/Src/system_stm32l4xx.c ****   */
 251:Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:Core/Src/system_stm32l4xx.c **** {
  59              		.loc 1 252 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 253:Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  64              		.loc 1 253 3 view .LVU6
 254:Core/Src/system_stm32l4xx.c **** 
 255:Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  65              		.loc 1 256 3 view .LVU7
  66              		.loc 1 256 11 is_stmt 0 view .LVU8
  67 0000 394B     		ldr	r3, .L19
  68 0002 1B68     		ldr	r3, [r3]
  69              		.loc 1 256 6 view .LVU9
  70 0004 13F0080F 		tst	r3, #8
  71 0008 2AD1     		bne	.L5
 257:Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  72              		.loc 1 258 5 is_stmt 1 view .LVU10
  73              		.loc 1 258 20 is_stmt 0 view .LVU11
  74 000a 374B     		ldr	r3, .L19
  75 000c D3F89430 		ldr	r3, [r3, #148]
  76              		.loc 1 258 14 view .LVU12
  77 0010 C3F30323 		ubfx	r3, r3, #8, #4
  78              	.LVL0:
  79              	.L6:
 259:Core/Src/system_stm32l4xx.c ****   }
 260:Core/Src/system_stm32l4xx.c ****   else
 261:Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 262:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 263:Core/Src/system_stm32l4xx.c ****   }
 264:Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  80              		.loc 1 265 3 is_stmt 1 view .LVU13
ARM GAS  /tmp/ccWvNeUo.s 			page 7


  81              		.loc 1 265 12 is_stmt 0 view .LVU14
  82 0014 354A     		ldr	r2, .L19+4
  83 0016 52F82320 		ldr	r2, [r2, r3, lsl #2]
  84              	.LVL1:
 266:Core/Src/system_stm32l4xx.c **** 
 267:Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  85              		.loc 1 268 3 is_stmt 1 view .LVU15
  86              		.loc 1 268 14 is_stmt 0 view .LVU16
  87 001a 334B     		ldr	r3, .L19
  88 001c 9B68     		ldr	r3, [r3, #8]
  89              		.loc 1 268 21 view .LVU17
  90 001e 03F00C03 		and	r3, r3, #12
  91              		.loc 1 268 3 view .LVU18
  92 0022 0C2B     		cmp	r3, #12
  93 0024 52D8     		bhi	.L7
  94 0026 01A1     		adr	r1, .L9
  95 0028 51F823F0 		ldr	pc, [r1, r3, lsl #2]
  96              		.p2align 2
  97              	.L9:
  98 002c 6B000000 		.word	.L12+1
  99 0030 CD000000 		.word	.L7+1
 100 0034 CD000000 		.word	.L7+1
 101 0038 CD000000 		.word	.L7+1
 102 003c 71000000 		.word	.L11+1
 103 0040 CD000000 		.word	.L7+1
 104 0044 CD000000 		.word	.L7+1
 105 0048 CD000000 		.word	.L7+1
 106 004c 79000000 		.word	.L10+1
 107 0050 CD000000 		.word	.L7+1
 108 0054 CD000000 		.word	.L7+1
 109 0058 CD000000 		.word	.L7+1
 110 005c 81000000 		.word	.L8+1
 111              	.LVL2:
 112              		.p2align 1
 113              	.L5:
 262:Core/Src/system_stm32l4xx.c ****   }
 114              		.loc 1 262 5 is_stmt 1 view .LVU19
 262:Core/Src/system_stm32l4xx.c ****   }
 115              		.loc 1 262 20 is_stmt 0 view .LVU20
 116 0060 214B     		ldr	r3, .L19
 117 0062 1B68     		ldr	r3, [r3]
 262:Core/Src/system_stm32l4xx.c ****   }
 118              		.loc 1 262 14 view .LVU21
 119 0064 C3F30313 		ubfx	r3, r3, #4, #4
 120 0068 D4E7     		b	.L6
 121              	.LVL3:
 122              	.L12:
 269:Core/Src/system_stm32l4xx.c ****   {
 270:Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 123              		.loc 1 271 7 is_stmt 1 view .LVU22
 124              		.loc 1 271 23 is_stmt 0 view .LVU23
 125 006a 214B     		ldr	r3, .L19+8
 126 006c 1A60     		str	r2, [r3]
 272:Core/Src/system_stm32l4xx.c ****       break;
 127              		.loc 1 272 7 is_stmt 1 view .LVU24
ARM GAS  /tmp/ccWvNeUo.s 			page 8


 128 006e 2FE0     		b	.L13
 129              	.L11:
 273:Core/Src/system_stm32l4xx.c **** 
 274:Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 130              		.loc 1 275 7 view .LVU25
 131              		.loc 1 275 23 is_stmt 0 view .LVU26
 132 0070 1F4B     		ldr	r3, .L19+8
 133 0072 204A     		ldr	r2, .L19+12
 134              	.LVL4:
 135              		.loc 1 275 23 view .LVU27
 136 0074 1A60     		str	r2, [r3]
 276:Core/Src/system_stm32l4xx.c ****       break;
 137              		.loc 1 276 7 is_stmt 1 view .LVU28
 138 0076 2BE0     		b	.L13
 139              	.LVL5:
 140              	.L10:
 277:Core/Src/system_stm32l4xx.c **** 
 278:Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 141              		.loc 1 279 7 view .LVU29
 142              		.loc 1 279 23 is_stmt 0 view .LVU30
 143 0078 1D4B     		ldr	r3, .L19+8
 144 007a 1F4A     		ldr	r2, .L19+16
 145              	.LVL6:
 146              		.loc 1 279 23 view .LVU31
 147 007c 1A60     		str	r2, [r3]
 280:Core/Src/system_stm32l4xx.c ****       break;
 148              		.loc 1 280 7 is_stmt 1 view .LVU32
 149 007e 27E0     		b	.L13
 150              	.LVL7:
 151              	.L8:
 281:Core/Src/system_stm32l4xx.c **** 
 282:Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 283:Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:Core/Src/system_stm32l4xx.c ****          */
 286:Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 152              		.loc 1 286 7 view .LVU33
 153              		.loc 1 286 23 is_stmt 0 view .LVU34
 154 0080 194B     		ldr	r3, .L19
 155 0082 D968     		ldr	r1, [r3, #12]
 156              		.loc 1 286 17 view .LVU35
 157 0084 01F00301 		and	r1, r1, #3
 158              	.LVL8:
 287:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 159              		.loc 1 287 7 is_stmt 1 view .LVU36
 160              		.loc 1 287 19 is_stmt 0 view .LVU37
 161 0088 DB68     		ldr	r3, [r3, #12]
 162              		.loc 1 287 49 view .LVU38
 163 008a C3F30313 		ubfx	r3, r3, #4, #4
 164              		.loc 1 287 12 view .LVU39
 165 008e 0133     		adds	r3, r3, #1
 166              	.LVL9:
 288:Core/Src/system_stm32l4xx.c **** 
 289:Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 167              		.loc 1 289 7 is_stmt 1 view .LVU40
ARM GAS  /tmp/ccWvNeUo.s 			page 9


 168 0090 0229     		cmp	r1, #2
 169 0092 04D0     		beq	.L14
 170 0094 0329     		cmp	r1, #3
 171 0096 15D0     		beq	.L15
 290:Core/Src/system_stm32l4xx.c ****       {
 291:Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 293:Core/Src/system_stm32l4xx.c ****           break;
 294:Core/Src/system_stm32l4xx.c **** 
 295:Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 297:Core/Src/system_stm32l4xx.c ****           break;
 298:Core/Src/system_stm32l4xx.c **** 
 299:Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 172              		.loc 1 300 11 view .LVU41
 173              		.loc 1 300 18 is_stmt 0 view .LVU42
 174 0098 B2FBF3F2 		udiv	r2, r2, r3
 175              	.LVL10:
 301:Core/Src/system_stm32l4xx.c ****           break;
 176              		.loc 1 301 11 is_stmt 1 view .LVU43
 177 009c 02E0     		b	.L17
 178              	.LVL11:
 179              	.L14:
 292:Core/Src/system_stm32l4xx.c ****           break;
 180              		.loc 1 292 11 view .LVU44
 292:Core/Src/system_stm32l4xx.c ****           break;
 181              		.loc 1 292 18 is_stmt 0 view .LVU45
 182 009e 154A     		ldr	r2, .L19+12
 183              	.LVL12:
 292:Core/Src/system_stm32l4xx.c ****           break;
 184              		.loc 1 292 18 view .LVU46
 185 00a0 B2FBF3F2 		udiv	r2, r2, r3
 186              	.LVL13:
 293:Core/Src/system_stm32l4xx.c **** 
 187              		.loc 1 293 11 is_stmt 1 view .LVU47
 188              	.L17:
 302:Core/Src/system_stm32l4xx.c ****       }
 303:Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 189              		.loc 1 303 7 view .LVU48
 190              		.loc 1 303 30 is_stmt 0 view .LVU49
 191 00a4 1049     		ldr	r1, .L19
 192              	.LVL14:
 193              		.loc 1 303 30 view .LVU50
 194 00a6 CB68     		ldr	r3, [r1, #12]
 195              	.LVL15:
 196              		.loc 1 303 60 view .LVU51
 197 00a8 C3F30623 		ubfx	r3, r3, #8, #7
 198              		.loc 1 303 14 view .LVU52
 199 00ac 02FB03F3 		mul	r3, r2, r3
 200              	.LVL16:
 304:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 201              		.loc 1 304 7 is_stmt 1 view .LVU53
 202              		.loc 1 304 20 is_stmt 0 view .LVU54
 203 00b0 CA68     		ldr	r2, [r1, #12]
 204              		.loc 1 304 50 view .LVU55
 205 00b2 C2F34162 		ubfx	r2, r2, #25, #2
ARM GAS  /tmp/ccWvNeUo.s 			page 10


 206              		.loc 1 304 58 view .LVU56
 207 00b6 0132     		adds	r2, r2, #1
 208              		.loc 1 304 12 view .LVU57
 209 00b8 5200     		lsls	r2, r2, #1
 210              	.LVL17:
 305:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 211              		.loc 1 305 7 is_stmt 1 view .LVU58
 212              		.loc 1 305 31 is_stmt 0 view .LVU59
 213 00ba B3FBF2F3 		udiv	r3, r3, r2
 214              	.LVL18:
 215              		.loc 1 305 23 view .LVU60
 216 00be 0C4A     		ldr	r2, .L19+8
 217              	.LVL19:
 218              		.loc 1 305 23 view .LVU61
 219 00c0 1360     		str	r3, [r2]
 306:Core/Src/system_stm32l4xx.c ****       break;
 220              		.loc 1 306 7 is_stmt 1 view .LVU62
 221 00c2 05E0     		b	.L13
 222              	.LVL20:
 223              	.L15:
 296:Core/Src/system_stm32l4xx.c ****           break;
 224              		.loc 1 296 11 view .LVU63
 296:Core/Src/system_stm32l4xx.c ****           break;
 225              		.loc 1 296 18 is_stmt 0 view .LVU64
 226 00c4 0C4A     		ldr	r2, .L19+16
 227              	.LVL21:
 296:Core/Src/system_stm32l4xx.c ****           break;
 228              		.loc 1 296 18 view .LVU65
 229 00c6 B2FBF3F2 		udiv	r2, r2, r3
 230              	.LVL22:
 297:Core/Src/system_stm32l4xx.c **** 
 231              		.loc 1 297 11 is_stmt 1 view .LVU66
 232 00ca EBE7     		b	.L17
 233              	.LVL23:
 234              	.L7:
 307:Core/Src/system_stm32l4xx.c **** 
 308:Core/Src/system_stm32l4xx.c ****     default:
 309:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 235              		.loc 1 309 7 view .LVU67
 236              		.loc 1 309 23 is_stmt 0 view .LVU68
 237 00cc 084B     		ldr	r3, .L19+8
 238 00ce 1A60     		str	r2, [r3]
 310:Core/Src/system_stm32l4xx.c ****       break;
 239              		.loc 1 310 7 is_stmt 1 view .LVU69
 240              	.LVL24:
 241              	.L13:
 311:Core/Src/system_stm32l4xx.c ****   }
 312:Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 242              		.loc 1 314 3 view .LVU70
 243              		.loc 1 314 28 is_stmt 0 view .LVU71
 244 00d0 054B     		ldr	r3, .L19
 245 00d2 9B68     		ldr	r3, [r3, #8]
 246              		.loc 1 314 52 view .LVU72
 247 00d4 C3F30313 		ubfx	r3, r3, #4, #4
 248              		.loc 1 314 22 view .LVU73
ARM GAS  /tmp/ccWvNeUo.s 			page 11


 249 00d8 084A     		ldr	r2, .L19+20
 250 00da D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 251              	.LVL25:
 315:Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 252              		.loc 1 316 3 is_stmt 1 view .LVU74
 253              		.loc 1 316 19 is_stmt 0 view .LVU75
 254 00dc 044A     		ldr	r2, .L19+8
 255 00de 1368     		ldr	r3, [r2]
 256 00e0 CB40     		lsrs	r3, r3, r1
 257 00e2 1360     		str	r3, [r2]
 317:Core/Src/system_stm32l4xx.c **** }
 258              		.loc 1 317 1 view .LVU76
 259 00e4 7047     		bx	lr
 260              	.L20:
 261 00e6 00BF     		.align	2
 262              	.L19:
 263 00e8 00100240 		.word	1073876992
 264 00ec 00000000 		.word	MSIRangeTable
 265 00f0 00000000 		.word	SystemCoreClock
 266 00f4 0024F400 		.word	16000000
 267 00f8 00127A00 		.word	8000000
 268 00fc 00000000 		.word	AHBPrescTable
 269              		.cfi_endproc
 270              	.LFE133:
 272              		.global	MSIRangeTable
 273              		.section	.rodata.MSIRangeTable,"a"
 274              		.align	2
 277              	MSIRangeTable:
 278 0000 A0860100 		.word	100000
 279 0004 400D0300 		.word	200000
 280 0008 801A0600 		.word	400000
 281 000c 00350C00 		.word	800000
 282 0010 40420F00 		.word	1000000
 283 0014 80841E00 		.word	2000000
 284 0018 00093D00 		.word	4000000
 285 001c 00127A00 		.word	8000000
 286 0020 0024F400 		.word	16000000
 287 0024 00366E01 		.word	24000000
 288 0028 0048E801 		.word	32000000
 289 002c 006CDC02 		.word	48000000
 290              		.global	APBPrescTable
 291              		.section	.rodata.APBPrescTable,"a"
 292              		.align	2
 295              	APBPrescTable:
 296 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 296      01020304 
 297              		.global	AHBPrescTable
 298              		.section	.rodata.AHBPrescTable,"a"
 299              		.align	2
 302              	AHBPrescTable:
 303 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 303      00000000 
 303      01020304 
 303      06
 304 000d 070809   		.ascii	"\007\010\011"
 305              		.global	SystemCoreClock
ARM GAS  /tmp/ccWvNeUo.s 			page 12


 306              		.section	.data.SystemCoreClock,"aw"
 307              		.align	2
 310              	SystemCoreClock:
 311 0000 00093D00 		.word	4000000
 312              		.text
 313              	.Letext0:
 314              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 315              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 316              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 317              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 318              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4r5xx.h"
ARM GAS  /tmp/ccWvNeUo.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
     /tmp/ccWvNeUo.s:21     .text.SystemInit:00000000 $t
     /tmp/ccWvNeUo.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccWvNeUo.s:46     .text.SystemInit:00000010 $d
     /tmp/ccWvNeUo.s:51     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccWvNeUo.s:57     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccWvNeUo.s:98     .text.SystemCoreClockUpdate:0000002c $d
     /tmp/ccWvNeUo.s:112    .text.SystemCoreClockUpdate:00000060 $t
     /tmp/ccWvNeUo.s:263    .text.SystemCoreClockUpdate:000000e8 $d
     /tmp/ccWvNeUo.s:277    .rodata.MSIRangeTable:00000000 MSIRangeTable
     /tmp/ccWvNeUo.s:310    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccWvNeUo.s:302    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccWvNeUo.s:274    .rodata.MSIRangeTable:00000000 $d
     /tmp/ccWvNeUo.s:295    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/ccWvNeUo.s:292    .rodata.APBPrescTable:00000000 $d
     /tmp/ccWvNeUo.s:299    .rodata.AHBPrescTable:00000000 $d
     /tmp/ccWvNeUo.s:307    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
